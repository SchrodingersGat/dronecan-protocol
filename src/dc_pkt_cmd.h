// dc_pkt_cmd.h was generated by ProtoGen version 2.2.d

#ifndef _DC_PKT_CMD_H
#define _DC_PKT_CMD_H

// C++ compilers: don't mangle us
#ifdef __cplusplus
extern "C" {
#endif

/*!
 * \file
 *
 * Raw actuator command
 */

#include "DC_CommandProtocol.h"

#define getMinLengthOfDC_Cmd_RawCommand_t() (2)

//! Create the DC_Cmd_RawCommand packet
void encodeDC_Cmd_RawCommandPacket(DC_Packet_t* pkt, int16_t value);

//! Decode the DC_Cmd_RawCommand packet
int decodeDC_Cmd_RawCommandPacket(const DC_Packet_t* pkt, int16_t* value);

//! return the packet ID for the DC_Cmd_RawCommand packet
#define getDC_Cmd_RawCommandPacketID() (DC_PKT_CMD_RAW_VALUE)

//! return the minimum data length for the DC_Cmd_RawCommand packet
#define getDC_Cmd_RawCommandMinDataLength() (2)

//! return the maximum data length for the DC_Cmd_RawCommand packet
#define getDC_Cmd_RawCommandMaxDataLength() (2)

#define getMinLengthOfDC_Cmd_PWMCommand_t() (2)

//! Create the DC_Cmd_PWMCommand packet
void encodeDC_Cmd_PWMCommandPacket(DC_Packet_t* pkt, uint16_t pwm);

//! Decode the DC_Cmd_PWMCommand packet
int decodeDC_Cmd_PWMCommandPacket(const DC_Packet_t* pkt, uint16_t* pwm);

//! return the packet ID for the DC_Cmd_PWMCommand packet
#define getDC_Cmd_PWMCommandPacketID() (DC_PKT_CMD_TARGET_PWM)

//! return the minimum data length for the DC_Cmd_PWMCommand packet
#define getDC_Cmd_PWMCommandMinDataLength() (2)

//! return the maximum data length for the DC_Cmd_PWMCommand packet
#define getDC_Cmd_PWMCommandMaxDataLength() (2)

#define getMinLengthOfDC_Cmd_ThrottleCommand_t() (2)

//! Create the DC_Cmd_ThrottleCommand packet
void encodeDC_Cmd_ThrottleCommandPacket(DC_Packet_t* pkt, uint16_t throttle);

//! Decode the DC_Cmd_ThrottleCommand packet
int decodeDC_Cmd_ThrottleCommandPacket(const DC_Packet_t* pkt, uint16_t* throttle);

//! return the packet ID for the DC_Cmd_ThrottleCommand packet
#define getDC_Cmd_ThrottleCommandPacketID() (DC_PKT_CMD_THROTTLE)

//! return the minimum data length for the DC_Cmd_ThrottleCommand packet
#define getDC_Cmd_ThrottleCommandMinDataLength() (2)

//! return the maximum data length for the DC_Cmd_ThrottleCommand packet
#define getDC_Cmd_ThrottleCommandMaxDataLength() (2)

#ifdef __cplusplus
}
#endif
#endif
