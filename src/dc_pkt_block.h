// dc_pkt_block.h was generated by ProtoGen version 2.2.d

#ifndef _DC_PKT_BLOCK_H
#define _DC_PKT_BLOCK_H

// C++ compilers: don't mangle us
#ifdef __cplusplus
extern "C" {
#endif

/*!
 * \file
 */

#include "DC_BlockProtocol.h"

typedef struct
{
    uint8_t  id;       //!< Transfer ID
    uint8_t  endpoint; //!< Transfer endpoint
    uint32_t address;  //!< Transfer address
    uint16_t size;     //!< Transfer size (bytes)
}DC_Block_StartBlockTransfer_t;

#define getMinLengthOfDC_Block_StartBlockTransfer_t() (8)

//! Create the DC_Block_StartBlockTransfer packet
void encodeDC_Block_StartBlockTransferPacketStructure(DC_Packet_t* pkt, const DC_Block_StartBlockTransfer_t* user);

//! Decode the DC_Block_StartBlockTransfer packet
int decodeDC_Block_StartBlockTransferPacketStructure(const DC_Packet_t* pkt, DC_Block_StartBlockTransfer_t* user);

//! return the packet ID for the DC_Block_StartBlockTransfer packet
#define getDC_Block_StartBlockTransferPacketID() (DC_PKT_BLOCK_START)

//! return the minimum data length for the DC_Block_StartBlockTransfer packet
#define getDC_Block_StartBlockTransferMinDataLength() (8)

//! return the maximum data length for the DC_Block_StartBlockTransfer packet
#define getDC_Block_StartBlockTransferMaxDataLength() (8)

#ifdef __cplusplus
}
#endif
#endif
