// dc_dev_info.h was generated by ProtoGen version 2.2.d

#ifndef _DC_DEV_INFO_H
#define _DC_DEV_INFO_H

// C++ compilers: don't mangle us
#ifdef __cplusplus
extern "C" {
#endif

/*!
 * \file
 *
 * Unique Identifier for device
 */

#include "DC_SystemProtocol.h"

/*!
 * Unique Identifier for device
 */
typedef struct
{
    uint16_t vid;    //!< Vendor ID
    uint16_t pid;    //!< Product ID
    uint32_t serial; //!< Device serial number
}DC_Sys_UID_t;

#define getMinLengthOfDC_Sys_UID_t() (7)

//! Encode a DC_Sys_UID_t structure into a byte array
void encodeDC_Sys_UID_t(uint8_t* data, int* bytecount, const DC_Sys_UID_t* user);

//! Decode a DC_Sys_UID_t structure from a byte array
int decodeDC_Sys_UID_t(const uint8_t* data, int* bytecount, DC_Sys_UID_t* user);

/*!
 * Device firmware version information
 */
typedef struct
{
    uint8_t major; //!< Major release number
    uint8_t minor; //!< Minor release number
    uint8_t sub;   //!< Sub release number
}DC_Sys_DevFwVersion_t;

#define getMinLengthOfDC_Sys_DevFwVersion_t() (3)

//! Encode a DC_Sys_DevFwVersion_t structure into a byte array
void encodeDC_Sys_DevFwVersion_t(uint8_t* data, int* bytecount, const DC_Sys_DevFwVersion_t* user);

//! Decode a DC_Sys_DevFwVersion_t structure from a byte array
int decodeDC_Sys_DevFwVersion_t(const uint8_t* data, int* bytecount, DC_Sys_DevFwVersion_t* user);

/*!
 * Device firmware release date information
 */
typedef struct
{
    uint16_t year;  //!< Year of release
    uint8_t  month; //!< Month of release
    uint8_t  day;   //!< Day of release
}DC_Sys_DevFwDate_t;

#define getMinLengthOfDC_Sys_DevFwDate_t() (4)

//! Encode a DC_Sys_DevFwDate_t structure into a byte array
void encodeDC_Sys_DevFwDate_t(uint8_t* data, int* bytecount, const DC_Sys_DevFwDate_t* user);

//! Decode a DC_Sys_DevFwDate_t structure from a byte array
int decodeDC_Sys_DevFwDate_t(const uint8_t* data, int* bytecount, DC_Sys_DevFwDate_t* user);

#ifdef __cplusplus
}
#endif
#endif
